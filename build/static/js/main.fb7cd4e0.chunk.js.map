{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Notifications","Avatar","onClick","signOut","then","scr","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","Add","fontSize","Inbox","Star","AccessTime","LabelImportant","NearMe","Note","ExpandMore","Person","Duo","Phone","Mail","history","useHistory","push","ArrowBack","MoveToInbox","Error","Delete","Email","WatchLater","CheckCircle","MoreVert","UnfoldMore","Print","ExitToApp","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","StarBorderOutlined","LabelImportantOutlined","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","Redo","ChevronLeft","ChevronRight","KeyboardHide","Settings","People","LocalOffer","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","formState","Close","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb7cd4e0.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n       user: null\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {login, logout} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAH2Y-zgI-RUZ7-KgV_g7rKArvlEnbZ9Ic\",\r\n    authDomain: \"clone-29fa8.firebaseapp.com\",\r\n    projectId: \"clone-29fa8\",\r\n    storageBucket: \"clone-29fa8.appspot.com\",\r\n    messagingSenderId: \"380138668886\",\r\n    appId: \"1:380138668886:web:f1471827e28e047cca0cf7\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {db, auth, provider};","import React from 'react';\r\nimport './Header.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {IconButton, Avatar} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport {Notifications} from \"@material-ui/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout, selectUser} from \"./features/userSlice\";\r\nimport {auth} from \"./firebase\";\r\n\r\nconst Header = () => {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const singOut = () => {\r\n        auth.signOut().then(()=> {\r\n            dispatch(logout());\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n           <div className=\"header__left\">\r\n               <IconButton>\r\n                   <MenuIcon/>\r\n               </IconButton>\r\n               <img src=\"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\" alt=\"logo\"/>\r\n\r\n           </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <SearchIcon/>\r\n                <input placeholder=\"Search mail\" type=\"text\"/>\r\n                <ArrowDropDownIcon className=\"header__inputCaret\"/>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <Notifications/>\r\n                </IconButton>\r\n                <Avatar\r\n                    onClick={singOut}\r\n                    scr={user?.photoUrl}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nconst SidebarOption = ({Icon, title, number, selected}) => {\r\n    return (\r\n        <div className={`sidebarOption ${selected && 'sidebar--active'}`}>\r\n            <Icon/>\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidebarOption;","import {createSlice} from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n    name: 'mail',\n    initialState: {\n        selectedMail: null,\n        sendMessageIsOpen: false,\n    },\n    reducers: {\n        selectMail: (state, action) => {\n            state.selectedMail = action.payload;\n        },\n        openSendMessage: (state) => {\n            state.sendMessageIsOpen = true;\n        },\n        closeSendMessage: (state) => {\n            state.sendMessageIsOpen = false;\n        },\n    },\n});\n\nexport const {selectMail, openSendMessage, closeSendMessage} = mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;","import React from 'react';\r\nimport './Sidebar.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n    AccessTime,\r\n    Add, Duo,\r\n    ExpandMore,\r\n    Inbox,\r\n    LabelImportant,\r\n    NearMe,\r\n    Note, Person, Phone,\r\n    Star\r\n} from \"@material-ui/icons\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {openSendMessage} from \"./features/mailSlice\";\r\n\r\nconst Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n            <Button startIcon={<Add fontSize=\"large\"/>}\r\n                    className=\"sidebar__compose\"\r\n                    onClick={()=>dispatch(openSendMessage())}\r\n            >\r\n                Compose\r\n            </Button>\r\n\r\n            <SidebarOption Icon={Inbox}\r\n                           title=\"Inbox\"\r\n                           number={55}\r\n                           selected={true}/>\r\n\r\n            <SidebarOption Icon={Star}\r\n                           title=\"Starred\"\r\n                           number={55}/>\r\n\r\n            <SidebarOption Icon={AccessTime}\r\n                           title=\"Snoozed\"\r\n                           number={55}/>\r\n\r\n            <SidebarOption Icon={LabelImportant}\r\n                           title=\"Important\"\r\n                           number={55}/>\r\n\r\n            <SidebarOption Icon={NearMe}\r\n                           title=\"Sent\"\r\n                           number={55}/>\r\n\r\n            <SidebarOption Icon={Note}\r\n                           title=\"Drafts\"\r\n                           number={55}/>\r\n\r\n            <SidebarOption Icon={ExpandMore}\r\n                           title=\"More\"\r\n                           number={55}/>\r\n\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <Person/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Duo/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Phone/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./Mail.css\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {\r\n    ArrowBack,\r\n    CheckCircle,\r\n    Delete,\r\n    Email,\r\n    Error, ExitToApp,\r\n    LabelImportant, MoreVert,\r\n    MoveToInbox, Print, UnfoldMore,\r\n    WatchLater\r\n} from \"@material-ui/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectOpenMail} from \"./features/mailSlice\";\r\n\r\nconst Mail = () => {\r\n    let history = useHistory();\r\n    let selectedMail = useSelector(selectOpenMail);\r\n\r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail__tools\">\r\n                <div className=\"mail__toolsLeft\">\r\n                    <IconButton  onClick={()=>history.push(\"/\")}>\r\n                        <ArrowBack/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInbox/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Error/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Delete/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Email/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <WatchLater/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircle/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportant/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMore/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <Print/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToApp/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"mail__body\">\r\n                <div className=\"mail__bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportant className=\"mail__important\"/>\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className=\"mail__time\">{selectedMail?.time}</p>\r\n                </div>\r\n\r\n                <div className=\"mail__message\">\r\n                    <p>{selectedMail?.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Mail;","import React from 'react';\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({Icon, title, color, selected}) => {\r\n    return (\r\n        <div className={`section ${selected && \"section--selected\"}`}\r\n             style={{\r\n                 borderBottom: `3px solid ${color}`,\r\n                 color: `${selected && color}`,\r\n             }}>\r\n            {<Icon/>}\r\n            <h4>{title}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport \"./EmailRow.css\";\r\nimport {Checkbox, IconButton} from \"@material-ui/core\";\r\nimport {LabelImportantOutlined, StarBorderOutlined} from \"@material-ui/icons\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {selectMail} from \"./features/mailSlice\";\r\n\r\nconst EmailRow = ( {title, subject, description, time, id}) => {\r\n    let history = useHistory();\r\n    let dispatch = useDispatch();\r\n\r\n    const openMail = () => {\r\n        dispatch(selectMail({\r\n            title,\r\n            subject,\r\n            description,\r\n            time,\r\n            id,\r\n        }));\r\n\r\n        history.push('/mail');\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"emailRow\"\r\n            onClick={openMail}\r\n        >\r\n            <div className=\"emailRow__options\">\r\n                <Checkbox/>\r\n                <IconButton>\r\n                    <StarBorderOutlined/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlined/>\r\n                </IconButton>\r\n            </div>\r\n\r\n            <h3 className=\"emailRow__title\">{title}</h3>\r\n\r\n            <div className=\"emailRow__message\">\r\n                <h4>{subject}{' '}\r\n                <span className=\"emailRow__description\">- {description}</span>\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"emailRow__time\">{time}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailRow;","import React, {useEffect, useState} from 'react';\r\nimport \"./EmailList.css\";\r\nimport {Checkbox, IconButton} from \"@material-ui/core\";\r\nimport {\r\n    ArrowDropDown,\r\n    ChevronLeft,\r\n    ChevronRight, Inbox,\r\n    KeyboardHide, LocalOffer,\r\n    MoreVert, People,\r\n    Redo,\r\n    Settings\r\n} from \"@material-ui/icons\";\r\nimport Section from \"./Section\";\r\nimport EmailRow from \"./EmailRow\";\r\nimport {db} from \"./firebase\";\r\n\r\nconst EmailList = () => {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('emails')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot((snapshot => setEmails(\r\n                    snapshot.docs.map(doc => (\r\n                        {\r\n                            id: doc.id,\r\n                            data: doc.data(),\r\n                        }\r\n                    ))\r\n                )\r\n            ));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"emailLIst\">\r\n\r\n            <div className=\"emailList__settings\">\r\n                <div className=\"emailList__settingsLeft\">\r\n                    <Checkbox/>\r\n                    <IconButton>\r\n                        <ArrowDropDown/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Redo/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeft/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRight/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHide/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Settings/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"emailList__sections\">\r\n                <Section Icon={Inbox}\r\n                         title=\"Primary\"\r\n                         color=\"red\"\r\n                         selected/>\r\n                <Section Icon={People}\r\n                         title=\"Social\"\r\n                         color=\"#1a73e8\"\r\n                         selected/>\r\n                <Section Icon={LocalOffer}\r\n                         title=\"Promotions\"\r\n                         color=\"green\"\r\n                         selected/>\r\n            </div>\r\n\r\n            <div className=\"emailList__list\">\r\n                {emails.map(({id, data: {to, subject, message, timestamp}}) => (\r\n                    <EmailRow\r\n                        id={id}\r\n                        key={id}\r\n                        title={to}\r\n                        subject={subject}\r\n                        description={message}\r\n                        time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                    />\r\n                ))}\r\n                <EmailRow\r\n                    title=\"Twitch\"\r\n                    subject=\"Hey fellow streamer!!!\"\r\n                    description=\"This is a test\"\r\n                    time=\"10pm\"/>\r\n                <EmailRow\r\n                    title=\"Simple test\"\r\n                    subject=\"Hey tester!!!\"\r\n                    description=\"This is a second test\"\r\n                    time=\"10pm\"/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailList;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport \"./SendMail.css\";\r\nimport {Close} from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closeSendMessage} from \"./features/mailSlice\";\r\nimport {db} from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst SendMail = () => {\r\n    const {register, handleSubmit, watch, formState: { errors }} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n      console.log(formData);\r\n      db.collection('emails').add(\r\n          {\r\n              to: formData.to,\r\n              subject: formData.subject,\r\n              message: formData.message,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n          }\r\n      );\r\n      dispatch(closeSendMessage());\r\n    };\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n\r\n            <div className=\"sendMail__header\">\r\n                <h3>New Message</h3>\r\n                <Close\r\n                    className=\"sendMail__close\"\r\n                    onClick={()=>dispatch(closeSendMessage())}\r\n                />\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                    name=\"to\"\r\n                    placeholder=\"To\"\r\n                    type=\"email\"\r\n                    {...register('to', {required: true})}\r\n                />\r\n                {errors.to && (<p className=\"sendMail__error\">To is Required</p>)}\r\n                <input\r\n                    name=\"subject\"\r\n                    placeholder=\"Subject\"\r\n                    type=\"text\"\r\n                    {...register('subject', {required: true})}\r\n                />\r\n                {errors.subject && (<p className=\"sendMail__error\">Subject is Required</p>)}\r\n                <input\r\n                    name=\"message\"\r\n                    placeholder=\"Message...\"\r\n                    type=\"text\"\r\n                    className=\"sendMail__message\"\r\n                    {...register('message', {required: true})}\r\n                />\r\n                {errors.message && (<p className=\"sendMail__error\">Message is Required</p>)}\r\n\r\n                <div className=\"sendMail__options\">\r\n                    <Button\r\n                        className=\"sendMail__send\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\">\r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendMail;","import React from 'react';\r\nimport './Login.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {auth, provider} from \"./firebase\";\r\nimport {login} from \"./features/userSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst Login = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then(({user}) => {\r\n                dispatch(login({\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoUrl: user.photoURL,\r\n                }))\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n\r\n            <div className=\"login__container\">\r\n                <img\r\n                    src=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\"\r\n                    alt=\"loginImg\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={signIn}>Login</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport {\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Mail from \"./Mail\";\r\nimport EmailList from \"./EmailList\";\r\nimport SendMail from \"./SendMail\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectSendMessageIsOpen} from \"./features/mailSlice\";\r\nimport {login, selectUser} from './features/userSlice';\r\nimport Login from \"./Login\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport {auth} from \"./firebase\";\r\n\r\nfunction App() {\r\n    const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                //the user is logged in\r\n                dispatch(login({\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoUrl: user.photoURL\r\n                }))\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            {!user ? (\r\n                <Login/>\r\n            ) : (\r\n                <div className=\"app\">\r\n                    <Header/>\r\n\r\n                    <div className=\"app__body\">\r\n                        <Sidebar/>\r\n\r\n                        <Switch>\r\n                            <Route path=\"/mail\">\r\n                                <Mail/>\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <EmailList/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    {sendMessageIsOpen && <SendMail/>}\r\n                </div>\r\n            )}\r\n            </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./app/store\";\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n            <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}